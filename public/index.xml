<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>He</title>
    <link>/</link>
    <description>Recent content on He</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 13 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ggplot2绘图</title>
      <link>/posts/ggplot2%E7%BB%98%E5%9B%BE/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/ggplot2%E7%BB%98%E5%9B%BE/</guid>
      <description>Plot = data + Aesthetics + Geometry
data：数据集，主要是数据框
Aesthetics ：映射，用来表示变量x和y，还可以用来控制颜色 ，点的大小或形状，条的高度等
Geometry ：几何对象，即各种图形类型（直方图、箱线图、线图、直方图、点图等）
qplot（x, y=NULL, data, geom=“auto”） ：是一个快速绘图函数，用于绘制简单图形。
ggplot（） ：比qplot更灵活，更强大，可以分图层逐步绘图。
print（） ：生成的图形可以保存为变量，然后可以随时打印出来。
last_plot（） ：返回要修改的最后一个图形
ggsave（“plot.png”，width = 5，height = 5） ：保存当前工作目录中的最后一个图形。
library(lattice)library(ggplot2)## Registered S3 methods overwritten by &amp;#39;ggplot2&amp;#39;:## method from ## [.quosures rlang## c.quosures rlang## print.quosures rlangdata(mtcars)df &amp;lt;- mtcars[, c(&amp;quot;mpg&amp;quot;,&amp;quot;cyl&amp;quot;,&amp;quot;wt&amp;quot;)]ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point(color=&amp;quot;red&amp;quot;,size = 2, shape = 20)+theme_bw()+geom_line(color=&amp;quot;blue&amp;quot;)set.</description>
    </item>
    
    <item>
      <title>数学成绩统计分析 </title>
      <link>/posts/%E6%95%B0%E5%AD%A6%E6%88%90%E7%BB%A9%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E6%95%B0%E5%AD%A6%E6%88%90%E7%BB%A9%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/</guid>
      <description># 建立学生名单num&amp;lt;-seq(10378001,10378100)num## [1] 10378001 10378002 10378003 10378004 10378005 10378006 10378007## [8] 10378008 10378009 10378010 10378011 10378012 10378013 10378014## [15] 10378015 10378016 10378017 10378018 10378019 10378020 10378021## [22] 10378022 10378023 10378024 10378025 10378026 10378027 10378028## [29] 10378029 10378030 10378031 10378032 10378033 10378034 10378035## [36] 10378036 10378037 10378038 10378039 10378040 10378041 10378042## [43] 10378043 10378044 10378045 10378046 10378047 10378048 10378049## [50] 10378050 10378051 10378052 10378053 10378054 10378055 10378056## [57] 10378057 10378058 10378059 10378060 10378061 10378062 10378063## [64] 10378064 10378065 10378066 10378067 10378068 10378069 10378070## [71] 10378071 10378072 10378073 10378074 10378075 10378076 10378077## [78] 10378078 10378079 10378080 10378081 10378082 10378083 10378084## [85] 10378085 10378086 10378087 10378088 10378089 10378090 10378091## [92] 10378092 10378093 10378094 10378095 10378096 10378097 10378098## [99] 10378099 10378100# 微积分成绩x1&amp;lt;-round(runif(100,min=80,max=100))#80到100分之间均匀分布，然后四舍五入x1## [1] 87 98 96 92 87 90 85 89 94 94 92 88 90 89 95 83 100## [18] 88 86 82 84 89 86 97 97 80 81 93 93 85 82 90 88 91## [35] 82 92 84 99 91 85 96 93 97 91 81 87 97 95 90 97 90## [52] 96 95 98 82 86 98 96 91 98 97 85 98 97 82 99 98 93## [69] 84 90 87 84 95 93 90 95 89 99 93 86 89 98 87 81 98## [86] 83 95 85 84 96 92 92 85 94 86 82 93 90 97 94# 线性代数成绩x2&amp;lt;-round(rnorm(100,mean=80,sd=7))#产生100个正态分布，平均值是80，标准差是7，然后四舍五入x2## [1] 83 77 84 82 80 80 80 86 80 87 82 77 81 79 80 78 86 84 90 84 95 72 81## [24] 68 77 84 76 72 73 76 84 84 73 84 81 76 76 74 78 76 77 79 97 78 70 79## [47] 80 74 75 73 82 79 87 77 90 74 75 71 83 72 92 79 71 78 78 82 67 72 85## [70] 88 71 95 85 78 87 89 91 76 71 88 82 72 81 72 70 80 79 72 90 84 84 78## [93] 87 69 84 78 82 85 79 79# 概率统计成绩x3&amp;lt;-round(rnorm(100,mean=83,sd=18))#产生100个正态分布，平均值是83，标准差是18，然后四舍五入x3[which(x3&amp;gt;100)]=100#对产生的值中超过100的改写成100x3## [1] 76 84 89 62 91 80 100 72 65 71 56 74 68 85 93 67 67## [18] 100 100 86 59 73 93 86 100 87 65 79 74 100 77 100 77 100## [35] 73 66 72 90 84 97 91 90 87 99 81 89 67 88 99 83 65## [52] 75 66 75 87 80 69 87 90 78 100 78 78 36 71 81 81 70## [69] 94 89 97 68 100 73 83 86 100 88 88 82 95 76 83 82 71## [86] 100 82 60 72 78 81 80 64 93 47 80 99 82 95 97# 合成数据框x&amp;lt;-data.</description>
    </item>
    
    <item>
      <title>雷达图</title>
      <link>/posts/2019-06-12-%E9%9B%B7%E8%BE%BE%E5%9B%BE/</link>
      <pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019-06-12-%E9%9B%B7%E8%BE%BE%E5%9B%BE/</guid>
      <description>library(fmsb)# 生成数据data=as.data.frame(matrix(sample(2:20,10,replace=T),ncol=10))colnames(data)=c(&amp;quot;生命&amp;quot;,&amp;quot;武力&amp;quot;,&amp;quot;智慧&amp;quot;,&amp;quot;防御&amp;quot; ,&amp;quot;侦察&amp;quot;,&amp;quot;斩杀&amp;quot;,&amp;quot;命中&amp;quot;,&amp;quot;闪避&amp;quot;,&amp;quot;幸运&amp;quot;,&amp;quot;消耗&amp;quot;)data=rbind(rep(20,10),rep(0,10),data)# 雷达图参数设置radarchart(data,axistype=1,pcol=rgb(0.2,0.5,0.5,0.9),pfcol=rgb(0.2,0.5,0.5,0.5),plwd=4,cglcol=&amp;quot;grey&amp;quot;,cglty=1,axislabcol=&amp;quot;grey&amp;quot;,caxislabels=seq(0,20,5),cglwd=0.8,vlcex=0.8)</description>
    </item>
    
    <item>
      <title>用R绘制中国人口省份地图</title>
      <link>/posts/2019-06-07-%E7%94%A8r%E7%BB%98%E5%88%B6%E4%B8%AD%E5%9B%BD%E5%88%86%E7%9C%81%E5%B8%82%E5%9C%B0%E5%9B%BE/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019-06-07-%E7%94%A8r%E7%BB%98%E5%88%B6%E4%B8%AD%E5%9B%BD%E5%88%86%E7%9C%81%E5%B8%82%E5%9C%B0%E5%9B%BE/</guid>
      <description>library(maptools)## 载入需要的程辑包：sp## Checking rgeos availability: FALSE## Note: when rgeos is not available, polygon geometry computations in maptools depend on gpclib,## which has a restricted licence. It is disabled by default;## to enable gpclib, type gpclibPermit()library(ggplot2)## Registered S3 methods overwritten by &amp;#39;ggplot2&amp;#39;:## method from ## [.quosures rlang## c.quosures rlang## print.quosures rlanglibrary(rgdal)## rgdal: version: 1.4-4, (SVN revision 833)## Geospatial Data Abstraction Library extensions to R successfully loaded## Loaded GDAL runtime: GDAL 2.</description>
    </item>
    
    <item>
      <title>绘制散点图</title>
      <link>/posts/2019-06-06-%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019-06-06-%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</guid>
      <description>library(ggplot2)p&amp;lt;-ggplot(economics,aes(x=pop,y=psavert))p+geom_point()+geom_smooth(method = &amp;quot;lm&amp;quot;,se=FALSE)</description>
    </item>
    
    <item>
      <title>用R做词云图</title>
      <link>/posts/2019-06-05-%E7%94%A8r%E5%81%9A%E8%AF%8D%E5%9B%BE%E4%BA%91/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019-06-05-%E7%94%A8r%E5%81%9A%E8%AF%8D%E5%9B%BE%E4%BA%91/</guid>
      <description>library(jiebaRD)library(jiebaR)engine = worker()word &amp;lt;- scan(&amp;#39;C:\\Users\\Lenovo\\Desktop\\《三体》.txt&amp;#39;,sep=&amp;#39;\n&amp;#39;,what=&amp;#39;&amp;#39;,encoding=&amp;quot;UTF-8&amp;quot;)engine_s&amp;lt;-worker(stop_word = &amp;quot;C:\\Users\\Lenovo\\Desktop\\stopwords.txt&amp;quot;)seg&amp;lt;-segment(word,engine_s)f&amp;lt;-freq(seg)f&amp;lt;-f[order(f[2],decreasing = TRUE),]f1&amp;lt;-f[1:200,]library(wordcloud2)wordcloud2(f1,size = 3,shape = &amp;#39;triangle&amp;#39;){&#34;x&#34;:{&#34;word&#34;:[&#34;　&#34;,&#34;中&#34;,&#34;一个&#34;,&#34;说&#34;,&#34;没有&#34;,&#34;汪淼&#34;,&#34;汪&#34;,&#34;太阳&#34;,&#34;淼&#34;,&#34;文明&#34;,&#34;三体&#34;,&#34;世界&#34;,&#34;看到&#34;,&#34;知道&#34;,&#34;叶文洁&#34;,&#34;现在&#34;,&#34;叶&#34;,&#34;可能&#34;,&#34;宇宙&#34;,&#34;时&#34;,&#34;地球&#34;,&#34;文&#34;,&#34;洁&#34;,&#34;已经&#34;,&#34;信息&#34;,&#34;人类&#34;,&#34;想&#34;,&#34;会&#34;,&#34;这种&#34;,&#34;科学&#34;,&#34;出现&#34;,&#34;发现&#34;,&#34;问&#34;,&#34;更&#34;,&#34;研究&#34;,&#34;基地&#34;,&#34;红岸&#34;,&#34;起来&#34;,&#34;两个&#34;,&#34;时间&#34;,&#34;三&#34;,&#34;走&#34;,&#34;一种&#34;,&#34;里&#34;,&#34;东西&#34;,&#34;很快&#34;,&#34;进行&#34;,&#34;发射&#34;,&#34;问题&#34;,&#34;体&#34;,&#34;最后&#34;,&#34;存在&#34;,&#34;史&#34;,&#34;看着&#34;,&#34;纪元&#34;,&#34;运行&#34;,&#34;事&#34;,&#34;巨大&#34;,&#34;做&#34;,&#34;系统&#34;,&#34;没&#34;,&#34;技术&#34;,&#34;智子&#34;,&#34;前&#34;,&#34;质子&#34;,&#34;号&#34;,&#34;元首&#34;,&#34;感觉&#34;,&#34;回答&#34;,&#34;发出&#34;,&#34;出&#34;,&#34;站&#34;,&#34;真的&#34;,&#34;一次&#34;,&#34;一直&#34;,&#34;背景&#34;,&#34;计算机&#34;,&#34;一下&#34;,&#34;工作&#34;,&#34;成&#34;,&#34;派&#34;,&#34;父亲&#34;,&#34;产生&#34;,&#34;行星&#34;,&#34;游戏&#34;,&#34;能够&#34;,&#34;不同&#34;,&#34;其实&#34;,&#34;天线&#34;,&#34;声音&#34;,&#34;雷&#34;,&#34;仿佛&#34;,&#34;不会&#34;,&#34;正在&#34;,&#34;地上&#34;,&#34;执政官&#34;,&#34;请&#34;,&#34;杨&#34;,&#34;监听&#34;,&#34;孩子&#34;,&#34;三个&#34;,&#34;突然&#34;,&#34;似乎&#34;,&#34;这是&#34;,&#34;观测&#34;,&#34;看看&#34;,&#34;太空&#34;,&#34;听到&#34;,&#34;只能&#34;,&#34;日&#34;,&#34;大史&#34;,&#34;一名&#34;,&#34;外星&#34;,&#34;告诉&#34;,&#34;变成&#34;,&#34;发生&#34;,&#34;不能&#34;,&#34;后来&#34;,&#34;需要&#34;,&#34;一片&#34;,&#34;接收&#34;,&#34;应该&#34;,&#34;整个&#34;,&#34;目标&#34;,&#34;眼睛&#34;,&#34;倒计时&#34;,&#34;组织&#34;,&#34;降临&#34;,&#34;立刻&#34;,&#34;社会&#34;,&#34;带&#34;,&#34;点点头&#34;,&#34;显示&#34;,&#34;找&#34;,&#34;部分&#34;,&#34;感到&#34;,&#34;辐射&#34;,&#34;展开&#34;,&#34;以后&#34;,&#34;地说&#34;,&#34;过去&#34;,&#34;显然&#34;,&#34;进入&#34;,&#34;方向&#34;,&#34;杨卫宁&#34;,&#34;力量&#34;,&#34;有人&#34;,&#34;金字塔&#34;,&#34;乱&#34;,&#34;周文王&#34;,&#34;年&#34;,&#34;下去&#34;,&#34;理论&#34;,&#34;不要&#34;,&#34;想象&#34;,&#34;审问者&#34;,&#34;中心&#34;,&#34;完全&#34;,&#34;注意&#34;,&#34;生命&#34;,&#34;觉得&#34;,&#34;下面&#34;,&#34;一条&#34;,&#34;成为&#34;,&#34;肯定&#34;,&#34;长&#34;,&#34;消失&#34;,&#34;构成&#34;,&#34;简单&#34;,&#34;听&#34;,&#34;天空&#34;,&#34;计算&#34;,&#34;生活&#34;,&#34;几乎&#34;,&#34;事情&#34;,&#34;以前&#34;,&#34;下来&#34;,&#34;丁&#34;,&#34;速度&#34;,&#34;审判&#34;,&#34;运动&#34;,&#34;好像&#34;,&#34;收到&#34;,&#34;三颗&#34;,&#34;令&#34;,&#34;发展&#34;,&#34;想到&#34;,&#34;沉默&#34;,&#34;一只&#34;,&#34;倒&#34;,&#34;结构&#34;,&#34;一位&#34;,&#34;士兵&#34;,&#34;希望&#34;,&#34;继续&#34;,&#34;努力&#34;,&#34;位置&#34;,&#34;小时&#34;,&#34;政委&#34;,&#34;仪&#34;],&#34;freq&#34;:[5104,649,628,614,408,339,290,275,265,263,258,250,245,244,241,214,207,204,194,190,188,186,183,181,158,142,139,132,130,121,119,118,118,116,115,113,111,110,110,106,102,100,99,98,98,97,97,95,95,93,92,90,89,87,85,84,83,82,82,81,81,79,78,78,77,77,76,75,75,74,73,71,70,70,69,69,69,68,67,66,65,64,64,62,62,61,61,61,60,60,60,60,60,60,60,59,58,58,58,58,57,57,57,57,57,56,56,56,55,55,55,55,54,54,54,53,53,53,53,53,53,52,52,52,52,51,51,51,51,50,50,50,49,49,49,49,49,48,48,48,48,47,47,47,47,47,46,46,46,46,45,45,45,45,45,44,44,44,44,43,43,43,43,43,43,42,42,42,42,42,42,42,42,42,41,41,41,41,40,40,40,40,40,40,40,39,39,39,39,39,39,38,38,38,38,38,38,38,37,37],&#34;fontFamily&#34;:&#34;Segoe UI&#34;,&#34;fontWeight&#34;:&#34;bold&#34;,&#34;color&#34;:&#34;random-dark&#34;,&#34;minSize&#34;:0,&#34;weightFactor&#34;:0.105799373040752,&#34;backgroundColor&#34;:&#34;white&#34;,&#34;gridSize&#34;:0,&#34;minRotation&#34;:-0.785398163397448,&#34;maxRotation&#34;:0.785398163397448,&#34;shuffle&#34;:true,&#34;rotateRatio&#34;:0.4,&#34;shape&#34;:&#34;triangle&#34;,&#34;ellipticity&#34;:0.65,&#34;figBase64&#34;:null,&#34;hover&#34;:null},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el,x){\n console.log(123);\n if(!iii){\n window.location.reload();\n iii = False;\n\n }\n }&#34;,&#34;data&#34;:null}]}}</description>
    </item>
    
    <item>
      <title>用R画流程图</title>
      <link>/posts/2019-06-05-%E7%94%A8r%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019-06-05-%E7%94%A8r%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</guid>
      <description>library(DiagrammeR)grViz(&amp;quot;digraph fig{scu[label=&amp;#39;四川大学&amp;#39;,shape=box,color=red]scu-&amp;gt;{a,b,c,d}a[label=&amp;#39;公管&amp;#39;shape=box,color=glod]}&amp;quot;){&#34;x&#34;:{&#34;diagram&#34;:&#34;digraph fig{scu[label=\&#34;四川大学\&#34;,shape=box,color=red]\nscu-{a,b,c,d}\na[label=\&#34;公管\&#34;shape=box,color=glod]\n}&#34;,&#34;config&#34;:{&#34;engine&#34;:&#34;dot&#34;,&#34;options&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}</description>
    </item>
    
    <item>
      <title>用R语言搭建个人博客网站</title>
      <link>/posts/%E7%94%A8r%E8%AF%AD%E8%A8%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/%E7%94%A8r%E8%AF%AD%E8%A8%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</guid>
      <description>一、准备第一步：安装R，Rstudio，Git
第二步：注册Github账号
第三步：生成 SSH 公钥
安装好 Git 后，打开Git Bash，输入命令：$ ssh-keygen -t rsa -C “你的GitHub注册邮箱”然后直接三个回车即可，最后得到了两个文件：id_rsa和id_rsa.pub。打开 id_rsa.pub 文件将里面的内容全部复制，或者输入命令，把key复制到剪贴板：$ clip &amp;lt; ~/.ssh/id_rsa.pub登录Github，选择Personal settings-&amp;gt;SSH and GPG keys-&amp;gt;New SSH key，将密钥粘贴到Key下的文本框内，点击Add SSH Key。 第四步：打开Rstudio，安装 blogdown包，在Console中输入命令：install.packages(“blogdown”)二、用Rstudio编辑博客系统配置需要的环境后，你就可以通过Rstudio来生成blog了。
第一步：新建一个Rblogdown项目
打开Rstudio，选择File-&amp;gt;New Project-&amp;gt;New Directory-&amp;gt;Website using blogdown。在弹出的New Project对话框中的Hugo theme中可替换hugo主题，hugo主题可以在https://themes.gohugo.io/中获得。上述过程也可以通过命令来实现：blogdown::new_site(theme = “xxx”) 。第二步：你会在你的Rstudio中看到项目文件的列表：
config.toml: 这是博客的配置文件，可以在这里修改和配置博客的一些全局信息。index.Rmd: 最终生成index.html 。content文件夹: 这里存放了要Post的R markdown 文档或markdown文档。public文件夹：最终博客生成的html文件和一些静态资源文件会放在这里。static文件夹: blogdown需要的一些静态资源文件，像css文件，图片，视频等文件。themes文件夹: hugo主题，blogdown引入的hugo主题会下载到这个文件夹。第三步：输入命令：blogdown::serve_site()可以启动你的博客网站，并在Viewer中显示运行的博客</description>
    </item>
    
    <item>
      <title>About Hugo</title>
      <link>/about-hugo/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/about-hugo/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
 https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.</description>
    </item>
    
  </channel>
</rss>