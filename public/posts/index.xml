<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on He</title>
		<link>/posts/</link>
		<description>Recent content in Posts on He</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Thu, 13 Jun 2019 00:00:00 +0000</lastBuildDate>
		<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>ggplot2绘图</title>
			<link>/posts/ggplot2%E7%BB%98%E5%9B%BE/</link>
			<pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/ggplot2%E7%BB%98%E5%9B%BE/</guid>
			<description>Plot = data + Aesthetics + Geometry
data：数据集，主要是数据框
Aesthetics ：映射，用来表示变量x和y，还可以用来控制颜色 ，点的大小或形状，条的高度等
Geometry ：几何对象，即各种图形类型（直方图、箱线图、线图、直方图、点图等）
qplot（x, y=NULL, data, geom=“auto”） ：是一个快速绘图函数，用于绘制简单图形。
ggplot（） ：比qplot更灵活，更强大，可以分图层逐步绘图。
print（） ：生成的图形可以保存为变量，然后可以随时打印出来。
last_plot（） ：返回要修改的最后一个图形
ggsave（“plot.png”，width = 5，height = 5） ：保存当前工作目录中的最后一个图形。
library(lattice)library(ggplot2)## Registered S3 methods overwritten by &amp;#39;ggplot2&amp;#39;:## method from ## [.quosures rlang## c.quosures rlang## print.quosures rlangdata(mtcars)df &amp;lt;- mtcars[, c(&amp;quot;mpg&amp;quot;,&amp;quot;cyl&amp;quot;,&amp;quot;wt&amp;quot;)]ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point(color=&amp;quot;red&amp;quot;,size = 2, shape = 20)+theme_bw()+geom_line(color=&amp;quot;blue&amp;quot;)set.</description>
			<content type="html"><![CDATA[


<p>Plot = data + Aesthetics + Geometry</p>
<p>data：数据集，主要是数据框</p>
<p>Aesthetics ：映射，用来表示变量x和y，还可以用来控制颜色 ，点的大小或形状，条的高度等</p>
<p>Geometry ：几何对象，即各种图形类型（直方图、箱线图、线图、直方图、点图等）</p>
<p>qplot（x, y=NULL, data, geom=“auto”） ：是一个快速绘图函数，用于绘制简单图形。</p>
<p>ggplot（） ：比qplot更灵活，更强大，可以分图层逐步绘图。</p>
<p>print（） ：生成的图形可以保存为变量，然后可以随时打印出来。</p>
<p>last_plot（） ：返回要修改的最后一个图形</p>
<p>ggsave（“plot.png”，width = 5，height = 5） ：保存当前工作目录中的最后一个图形。</p>
<pre class="r"><code>library(lattice)
library(ggplot2)</code></pre>
<pre><code>## Registered S3 methods overwritten by &#39;ggplot2&#39;:
##   method         from 
##   [.quosures     rlang
##   c.quosures     rlang
##   print.quosures rlang</code></pre>
<pre class="r"><code>data(mtcars)
df &lt;- mtcars[, c(&quot;mpg&quot;,&quot;cyl&quot;,&quot;wt&quot;)]

ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point(color=&quot;red&quot;,size = 2, shape = 20)+theme_bw()+geom_line(color=&quot;blue&quot;)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-1-1.png" width="672" /></p>
<pre class="r"><code>set.seed(1234)
wdata = data.frame(sex = factor(rep(c(&quot;F&quot;, &quot;M&quot;), each=200)),weight = c(rnorm(200, 55), rnorm(200, 58)))
head(wdata)</code></pre>
<pre><code>##   sex   weight
## 1   F 53.79293
## 2   F 55.27743
## 3   F 56.08444
## 4   F 52.65430
## 5   F 55.42912
## 6   F 55.50606</code></pre>
<pre class="r"><code>a &lt;- ggplot(wdata, aes(x = weight))
a+geom_histogram(aes(color= sex,fill=sex),alpha = 0.2,position = &quot;stack&quot;)+theme_classic()</code></pre>
<pre><code>## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-2-1.png" width="672" /></p>
<pre class="r"><code>p &lt;- ggplot(data = mpg,aes(displ,hwy))
p+geom_jitter(width = 0.5,height = 0.5)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-3-1.png" width="672" /></p>
<pre class="r"><code>c &lt;- ggplot(data = diamonds,aes(carat,price))
c+geom_bin2d(bins=30)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-4-1.png" width="672" /></p>
<pre class="r"><code>library(hexbin)
c + geom_hex(bins = 10)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-4-2.png" width="672" /></p>
<pre class="r"><code>set.seed(1111)
ss &lt;- economics[sample(1:nrow(economics),20),]
ggplot(ss,aes(x=date,y=unemploy))+geom_line()</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-5-1.png" width="672" /></p>
<pre class="r"><code>ggplot(data = faithful, aes(x=eruptions, y=waiting))+geom_point()+geom_rug()</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-6-1.png" width="672" /></p>
<pre class="r"><code>data(&quot;ToothGrowth&quot;)
ToothGrowth$dose &lt;- as.factor(ToothGrowth$dose)
head(ToothGrowth)</code></pre>
<pre><code>##    len supp dose
## 1  4.2   VC  0.5
## 2 11.5   VC  0.5
## 3  7.3   VC  0.5
## 4  5.8   VC  0.5
## 5  6.4   VC  0.5
## 6 10.0   VC  0.5</code></pre>
<pre class="r"><code>e &lt;- ggplot(ToothGrowth, aes(x = dose, y = len))
e + geom_boxplot()</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-7-1.png" width="672" /></p>
<pre class="r"><code>e + geom_boxplot(notch = TRUE)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-7-2.png" width="672" /></p>
<pre class="r"><code>e + geom_boxplot(aes(color = dose))</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-7-3.png" width="672" /></p>
<pre class="r"><code>e + geom_boxplot(aes(fill = dose))</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-7-4.png" width="672" /></p>
<pre class="r"><code>ggplot(ToothGrowth, aes(x=dose, y=len, fill=supp)) +geom_boxplot()</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-7-5.png" width="672" /></p>
<pre class="r"><code>e + geom_violin(trim = FALSE)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-8-1.png" width="672" /></p>
<pre class="r"><code>e + geom_violin(trim = FALSE)+stat_summary(fun.data=&quot;mean_sdl&quot;,  fun.args = list(mult=1),geom=&quot;pointrange&quot;, color = &quot;red&quot;)</code></pre>
<pre><code>## Warning: Computation failed in `stat_summary()`:
## Hmisc package required for this function</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-8-2.png" width="672" /></p>
<pre class="r"><code>e + geom_violin(trim = FALSE) + geom_boxplot(width = 0.2)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-8-3.png" width="672" /></p>
<pre class="r"><code>e + geom_violin(aes(color = dose), trim = FALSE)</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-8-4.png" width="672" /></p>
<pre class="r"><code>e + geom_dotplot(binaxis = &quot;y&quot;, stackdir = &quot;center&quot;)</code></pre>
<pre><code>## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-9-1.png" width="672" /></p>
<pre class="r"><code>e + geom_dotplot(binaxis = &quot;y&quot;, stackdir = &quot;center&quot;) + stat_summary(fun.data=&quot;mean_sdl&quot;,  fun.args = list(mult=1),geom=&quot;pointrange&quot;, color = &quot;red&quot;)</code></pre>
<pre><code>## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`.</code></pre>
<pre><code>## Warning: Computation failed in `stat_summary()`:
## Hmisc package required for this function</code></pre>
<p><img src="/posts/2019-06-13-ggplot2绘图_files/figure-html/unnamed-chunk-9-2.png" width="672" /></p>
]]></content>
		</item>
		
		<item>
			<title>数学成绩统计分析 </title>
			<link>/posts/%E6%95%B0%E5%AD%A6%E6%88%90%E7%BB%A9%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/</link>
			<pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/%E6%95%B0%E5%AD%A6%E6%88%90%E7%BB%A9%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90/</guid>
			<description># 建立学生名单num&amp;lt;-seq(10378001,10378100)num## [1] 10378001 10378002 10378003 10378004 10378005 10378006 10378007## [8] 10378008 10378009 10378010 10378011 10378012 10378013 10378014## [15] 10378015 10378016 10378017 10378018 10378019 10378020 10378021## [22] 10378022 10378023 10378024 10378025 10378026 10378027 10378028## [29] 10378029 10378030 10378031 10378032 10378033 10378034 10378035## [36] 10378036 10378037 10378038 10378039 10378040 10378041 10378042## [43] 10378043 10378044 10378045 10378046 10378047 10378048 10378049## [50] 10378050 10378051 10378052 10378053 10378054 10378055 10378056## [57] 10378057 10378058 10378059 10378060 10378061 10378062 10378063## [64] 10378064 10378065 10378066 10378067 10378068 10378069 10378070## [71] 10378071 10378072 10378073 10378074 10378075 10378076 10378077## [78] 10378078 10378079 10378080 10378081 10378082 10378083 10378084## [85] 10378085 10378086 10378087 10378088 10378089 10378090 10378091## [92] 10378092 10378093 10378094 10378095 10378096 10378097 10378098## [99] 10378099 10378100# 微积分成绩x1&amp;lt;-round(runif(100,min=80,max=100))#80到100分之间均匀分布，然后四舍五入x1## [1] 87 98 96 92 87 90 85 89 94 94 92 88 90 89 95 83 100## [18] 88 86 82 84 89 86 97 97 80 81 93 93 85 82 90 88 91## [35] 82 92 84 99 91 85 96 93 97 91 81 87 97 95 90 97 90## [52] 96 95 98 82 86 98 96 91 98 97 85 98 97 82 99 98 93## [69] 84 90 87 84 95 93 90 95 89 99 93 86 89 98 87 81 98## [86] 83 95 85 84 96 92 92 85 94 86 82 93 90 97 94# 线性代数成绩x2&amp;lt;-round(rnorm(100,mean=80,sd=7))#产生100个正态分布，平均值是80，标准差是7，然后四舍五入x2## [1] 83 77 84 82 80 80 80 86 80 87 82 77 81 79 80 78 86 84 90 84 95 72 81## [24] 68 77 84 76 72 73 76 84 84 73 84 81 76 76 74 78 76 77 79 97 78 70 79## [47] 80 74 75 73 82 79 87 77 90 74 75 71 83 72 92 79 71 78 78 82 67 72 85## [70] 88 71 95 85 78 87 89 91 76 71 88 82 72 81 72 70 80 79 72 90 84 84 78## [93] 87 69 84 78 82 85 79 79# 概率统计成绩x3&amp;lt;-round(rnorm(100,mean=83,sd=18))#产生100个正态分布，平均值是83，标准差是18，然后四舍五入x3[which(x3&amp;gt;100)]=100#对产生的值中超过100的改写成100x3## [1] 76 84 89 62 91 80 100 72 65 71 56 74 68 85 93 67 67## [18] 100 100 86 59 73 93 86 100 87 65 79 74 100 77 100 77 100## [35] 73 66 72 90 84 97 91 90 87 99 81 89 67 88 99 83 65## [52] 75 66 75 87 80 69 87 90 78 100 78 78 36 71 81 81 70## [69] 94 89 97 68 100 73 83 86 100 88 88 82 95 76 83 82 71## [86] 100 82 60 72 78 81 80 64 93 47 80 99 82 95 97# 合成数据框x&amp;lt;-data.</description>
			<content type="html"><![CDATA[


<pre class="r"><code># 建立学生名单
num&lt;-seq(10378001,10378100)
num</code></pre>
<pre><code>##   [1] 10378001 10378002 10378003 10378004 10378005 10378006 10378007
##   [8] 10378008 10378009 10378010 10378011 10378012 10378013 10378014
##  [15] 10378015 10378016 10378017 10378018 10378019 10378020 10378021
##  [22] 10378022 10378023 10378024 10378025 10378026 10378027 10378028
##  [29] 10378029 10378030 10378031 10378032 10378033 10378034 10378035
##  [36] 10378036 10378037 10378038 10378039 10378040 10378041 10378042
##  [43] 10378043 10378044 10378045 10378046 10378047 10378048 10378049
##  [50] 10378050 10378051 10378052 10378053 10378054 10378055 10378056
##  [57] 10378057 10378058 10378059 10378060 10378061 10378062 10378063
##  [64] 10378064 10378065 10378066 10378067 10378068 10378069 10378070
##  [71] 10378071 10378072 10378073 10378074 10378075 10378076 10378077
##  [78] 10378078 10378079 10378080 10378081 10378082 10378083 10378084
##  [85] 10378085 10378086 10378087 10378088 10378089 10378090 10378091
##  [92] 10378092 10378093 10378094 10378095 10378096 10378097 10378098
##  [99] 10378099 10378100</code></pre>
<pre class="r"><code># 微积分成绩

x1&lt;-round(runif(100,min=80,max=100))#80到100分之间均匀分布，然后四舍五入
x1</code></pre>
<pre><code>##   [1]  87  98  96  92  87  90  85  89  94  94  92  88  90  89  95  83 100
##  [18]  88  86  82  84  89  86  97  97  80  81  93  93  85  82  90  88  91
##  [35]  82  92  84  99  91  85  96  93  97  91  81  87  97  95  90  97  90
##  [52]  96  95  98  82  86  98  96  91  98  97  85  98  97  82  99  98  93
##  [69]  84  90  87  84  95  93  90  95  89  99  93  86  89  98  87  81  98
##  [86]  83  95  85  84  96  92  92  85  94  86  82  93  90  97  94</code></pre>
<pre class="r"><code># 线性代数成绩

x2&lt;-round(rnorm(100,mean=80,sd=7))#产生100个正态分布，平均值是80，标准差是7，然后四舍五入
x2</code></pre>
<pre><code>##   [1] 83 77 84 82 80 80 80 86 80 87 82 77 81 79 80 78 86 84 90 84 95 72 81
##  [24] 68 77 84 76 72 73 76 84 84 73 84 81 76 76 74 78 76 77 79 97 78 70 79
##  [47] 80 74 75 73 82 79 87 77 90 74 75 71 83 72 92 79 71 78 78 82 67 72 85
##  [70] 88 71 95 85 78 87 89 91 76 71 88 82 72 81 72 70 80 79 72 90 84 84 78
##  [93] 87 69 84 78 82 85 79 79</code></pre>
<pre class="r"><code># 概率统计成绩

x3&lt;-round(rnorm(100,mean=83,sd=18))#产生100个正态分布，平均值是83，标准差是18，然后四舍五入
x3[which(x3&gt;100)]=100#对产生的值中超过100的改写成100
x3</code></pre>
<pre><code>##   [1]  76  84  89  62  91  80 100  72  65  71  56  74  68  85  93  67  67
##  [18] 100 100  86  59  73  93  86 100  87  65  79  74 100  77 100  77 100
##  [35]  73  66  72  90  84  97  91  90  87  99  81  89  67  88  99  83  65
##  [52]  75  66  75  87  80  69  87  90  78 100  78  78  36  71  81  81  70
##  [69]  94  89  97  68 100  73  83  86 100  88  88  82  95  76  83  82  71
##  [86] 100  82  60  72  78  81  80  64  93  47  80  99  82  95  97</code></pre>
<pre class="r"><code># 合成数据框

x&lt;-data.frame(num,x1,x2,x3)
x</code></pre>
<pre><code>##          num  x1 x2  x3
## 1   10378001  87 83  76
## 2   10378002  98 77  84
## 3   10378003  96 84  89
## 4   10378004  92 82  62
## 5   10378005  87 80  91
## 6   10378006  90 80  80
## 7   10378007  85 80 100
## 8   10378008  89 86  72
## 9   10378009  94 80  65
## 10  10378010  94 87  71
## 11  10378011  92 82  56
## 12  10378012  88 77  74
## 13  10378013  90 81  68
## 14  10378014  89 79  85
## 15  10378015  95 80  93
## 16  10378016  83 78  67
## 17  10378017 100 86  67
## 18  10378018  88 84 100
## 19  10378019  86 90 100
## 20  10378020  82 84  86
## 21  10378021  84 95  59
## 22  10378022  89 72  73
## 23  10378023  86 81  93
## 24  10378024  97 68  86
## 25  10378025  97 77 100
## 26  10378026  80 84  87
## 27  10378027  81 76  65
## 28  10378028  93 72  79
## 29  10378029  93 73  74
## 30  10378030  85 76 100
## 31  10378031  82 84  77
## 32  10378032  90 84 100
## 33  10378033  88 73  77
## 34  10378034  91 84 100
## 35  10378035  82 81  73
## 36  10378036  92 76  66
## 37  10378037  84 76  72
## 38  10378038  99 74  90
## 39  10378039  91 78  84
## 40  10378040  85 76  97
## 41  10378041  96 77  91
## 42  10378042  93 79  90
## 43  10378043  97 97  87
## 44  10378044  91 78  99
## 45  10378045  81 70  81
## 46  10378046  87 79  89
## 47  10378047  97 80  67
## 48  10378048  95 74  88
## 49  10378049  90 75  99
## 50  10378050  97 73  83
## 51  10378051  90 82  65
## 52  10378052  96 79  75
## 53  10378053  95 87  66
## 54  10378054  98 77  75
## 55  10378055  82 90  87
## 56  10378056  86 74  80
## 57  10378057  98 75  69
## 58  10378058  96 71  87
## 59  10378059  91 83  90
## 60  10378060  98 72  78
## 61  10378061  97 92 100
## 62  10378062  85 79  78
## 63  10378063  98 71  78
## 64  10378064  97 78  36
## 65  10378065  82 78  71
## 66  10378066  99 82  81
## 67  10378067  98 67  81
## 68  10378068  93 72  70
## 69  10378069  84 85  94
## 70  10378070  90 88  89
## 71  10378071  87 71  97
## 72  10378072  84 95  68
## 73  10378073  95 85 100
## 74  10378074  93 78  73
## 75  10378075  90 87  83
## 76  10378076  95 89  86
## 77  10378077  89 91 100
## 78  10378078  99 76  88
## 79  10378079  93 71  88
## 80  10378080  86 88  82
## 81  10378081  89 82  95
## 82  10378082  98 72  76
## 83  10378083  87 81  83
## 84  10378084  81 72  82
## 85  10378085  98 70  71
## 86  10378086  83 80 100
## 87  10378087  95 79  82
## 88  10378088  85 72  60
## 89  10378089  84 90  72
## 90  10378090  96 84  78
## 91  10378091  92 84  81
## 92  10378092  92 78  80
## 93  10378093  85 87  64
## 94  10378094  94 69  93
## 95  10378095  86 84  47
## 96  10378096  82 78  80
## 97  10378097  93 82  99
## 98  10378098  90 85  82
## 99  10378099  97 79  95
## 100 10378100  94 79  97</code></pre>
<pre class="r"><code># 保存到硬盘

write.table(x,file=&quot;d:\\mark.txt&quot;,col.names=F,row.names=F,sep=&quot; &quot;)#将数据保存到d:\mark.txt中，不保存行名和列名，数据以空格分割开来</code></pre>
<pre class="r"><code># 对列求平均值

colMeans(x)[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)]</code></pre>
<pre><code>##    x1    x2    x3 
## 90.63 79.82 81.44</code></pre>
<pre class="r"><code># 求成绩的平均值，最大值，最小值
# apply()函数：举例apply(x,2,mean)中的第一个参数表示传入的数据，第二个参数表示是对行还是列进行运算，1表示行，2表示列，第三个参数表示所求的形式，mean求均值，max求最大值 

apply(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)],2,mean)</code></pre>
<pre><code>##    x1    x2    x3 
## 90.63 79.82 81.44</code></pre>
<pre class="r"><code>apply(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)],2,max)</code></pre>
<pre><code>##  x1  x2  x3 
## 100  97 100</code></pre>
<pre class="r"><code>apply(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)],2,min)</code></pre>
<pre><code>## x1 x2 x3 
## 80 67 36</code></pre>
<pre class="r"><code># 求出总分最高的同学
apply(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)],1,sum)</code></pre>
<pre><code>##   [1] 246 259 269 236 258 250 265 247 239 252 230 239 239 253 268 228 253
##  [18] 272 276 252 238 234 260 251 274 251 222 244 240 261 243 274 238 275
##  [35] 236 234 232 263 253 258 264 262 281 268 232 255 244 257 264 253 237
##  [52] 250 248 250 259 240 242 254 264 248 289 242 247 211 231 262 246 235
##  [69] 263 267 255 247 280 244 260 270 280 263 252 256 266 246 251 235 239
##  [86] 263 256 217 246 258 257 250 236 256 217 240 274 257 271 270</code></pre>
<pre class="r"><code>which.max(apply(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)],1,sum))</code></pre>
<pre><code>## [1] 61</code></pre>
<pre class="r"><code>x$num[which.max(apply(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)],1,sum))]</code></pre>
<pre><code>## [1] 10378061</code></pre>
<pre class="r"><code># 直方图

hist(x$x1)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-10-1.png" width="672" /></p>
<pre class="r"><code>hist(x$x2)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-10-2.png" width="672" /></p>
<pre class="r"><code>hist(x$x3)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-10-3.png" width="672" /></p>
<pre class="r"><code># 散点图

plot(x$x1,x$x2)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-11-1.png" width="672" /></p>
<pre class="r"><code># 柱状图

table(x$x1)</code></pre>
<pre><code>## 
##  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97 
##   1   3   6   2   5   6   5   5   3   5   8   4   5   7   4   6   5   8 
##  98  99 100 
##   8   3   1</code></pre>
<pre class="r"><code>barplot(table(x$x1))</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-12-1.png" width="672" /></p>
<pre class="r"><code># 饼图

pie(table(x$x1))</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-13-1.png" width="672" /></p>
<pre class="r"><code># 箱尾图
# 箱子的上下横线为样本的25%和75%分位数,中间的横线为样本的中位数,上下延伸的直线称为尾线，尾线的尽头为最高值和最低值 

boxplot(x$x1,x$x2,x$x3)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-14-1.png" width="672" /></p>
<pre class="r"><code># 星相图
# 每个观测单位的数值表示为一个图形每个图的每个角表示一个标量，字符串类型会标注在图的下方,角线的长度表达值的大小

stars(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)])</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-15-1.png" width="672" /></p>
<pre class="r"><code>stars(x[c(&quot;x1&quot;,&quot;x2&quot;,&quot;x3&quot;)],full=T,draw.segment=T)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-15-2.png" width="672" /></p>
<pre class="r"><code># 脸谱图
# 用五官的宽度和高度来描绘数值 

library(TeachingDemos)
faces2(x)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-16-1.png" width="672" /></p>
<pre class="r"><code># QQ图
# 可用于判断是否正态分布,直线的斜率是标准差，截距是均值,点的散布越接近直线，则越接近正态分布

qqnorm(x1)
qqline(x1)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-17-1.png" width="672" /></p>
<pre class="r"><code># 散点图

plot(x$x1,x$x2,main=&quot;微积分与线性代数成绩的关系&quot;,xlab=&quot;微积分&quot;,ylab=&quot;线性代数&quot;,xlim=c(0,100),ylim=c(0,100),xaxs=&quot;i&quot;,yaxs=&quot;i&quot;,col=&quot;red&quot;,pch=19)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-18-1.png" width="672" /></p>
<pre class="r"><code># 散点图集
# 遍历样本中全部的变量配对画出二元图，直观地了解所有变量之间的关系
par(mfrow=c(3,1))
plot(x1,x2)
plot(x2,x3)
plot(x3,x1)</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-19-1.png" width="672" /></p>
<pre class="r"><code># 三维散点图

library(scatterplot3d)
scatterplot3d(x[2:4])</code></pre>
<p><img src="/post/2019-06-12-数学成绩统计分析_files/figure-html/unnamed-chunk-20-1.png" width="672" /></p>
]]></content>
		</item>
		
		<item>
			<title>雷达图</title>
			<link>/posts/2019-06-12-%E9%9B%B7%E8%BE%BE%E5%9B%BE/</link>
			<pubDate>Wed, 12 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/2019-06-12-%E9%9B%B7%E8%BE%BE%E5%9B%BE/</guid>
			<description>library(fmsb)# 生成数据data=as.data.frame(matrix(sample(2:20,10,replace=T),ncol=10))colnames(data)=c(&amp;quot;生命&amp;quot;,&amp;quot;武力&amp;quot;,&amp;quot;智慧&amp;quot;,&amp;quot;防御&amp;quot; ,&amp;quot;侦察&amp;quot;,&amp;quot;斩杀&amp;quot;,&amp;quot;命中&amp;quot;,&amp;quot;闪避&amp;quot;,&amp;quot;幸运&amp;quot;,&amp;quot;消耗&amp;quot;)data=rbind(rep(20,10),rep(0,10),data)# 雷达图参数设置radarchart(data,axistype=1,pcol=rgb(0.2,0.5,0.5,0.9),pfcol=rgb(0.2,0.5,0.5,0.5),plwd=4,cglcol=&amp;quot;grey&amp;quot;,cglty=1,axislabcol=&amp;quot;grey&amp;quot;,caxislabels=seq(0,20,5),cglwd=0.8,vlcex=0.8)</description>
			<content type="html"><![CDATA[


<pre class="r"><code>library(fmsb)

# 生成数据

data=as.data.frame(matrix(sample(2:20,10,replace=T),ncol=10))

colnames(data)=c(&quot;生命&quot;,&quot;武力&quot;,&quot;智慧&quot;,&quot;防御&quot; ,&quot;侦察&quot;,&quot;斩杀&quot;,&quot;命中&quot;,&quot;闪避&quot;,&quot;幸运&quot;,&quot;消耗&quot;)

data=rbind(rep(20,10),rep(0,10),data)

# 雷达图参数设置

radarchart(data,axistype=1,pcol=rgb(0.2,0.5,0.5,0.9),pfcol=rgb(0.2,0.5,0.5,0.5),plwd=4,cglcol=&quot;grey&quot;,cglty=1,axislabcol=&quot;grey&quot;,caxislabels=seq(0,20,5),cglwd=0.8,vlcex=0.8)</code></pre>
<p><img src="/posts/2019-06-12-雷达图_files/figure-html/unnamed-chunk-1-1.png" width="672" /></p>
]]></content>
		</item>
		
		<item>
			<title>用R绘制中国人口省份地图</title>
			<link>/posts/2019-06-07-%E7%94%A8r%E7%BB%98%E5%88%B6%E4%B8%AD%E5%9B%BD%E5%88%86%E7%9C%81%E5%B8%82%E5%9C%B0%E5%9B%BE/</link>
			<pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/2019-06-07-%E7%94%A8r%E7%BB%98%E5%88%B6%E4%B8%AD%E5%9B%BD%E5%88%86%E7%9C%81%E5%B8%82%E5%9C%B0%E5%9B%BE/</guid>
			<description>library(maptools)## 载入需要的程辑包：sp## Checking rgeos availability: FALSE## Note: when rgeos is not available, polygon geometry computations in maptools depend on gpclib,## which has a restricted licence. It is disabled by default;## to enable gpclib, type gpclibPermit()library(ggplot2)## Registered S3 methods overwritten by &amp;#39;ggplot2&amp;#39;:## method from ## [.quosures rlang## c.quosures rlang## print.quosures rlanglibrary(rgdal)## rgdal: version: 1.4-4, (SVN revision 833)## Geospatial Data Abstraction Library extensions to R successfully loaded## Loaded GDAL runtime: GDAL 2.</description>
			<content type="html"><![CDATA[


<pre class="r"><code>library(maptools)</code></pre>
<pre><code>## 载入需要的程辑包：sp</code></pre>
<pre><code>## Checking rgeos availability: FALSE
##      Note: when rgeos is not available, polygon geometry     computations in maptools depend on gpclib,
##      which has a restricted licence. It is disabled by default;
##      to enable gpclib, type gpclibPermit()</code></pre>
<pre class="r"><code>library(ggplot2)</code></pre>
<pre><code>## Registered S3 methods overwritten by &#39;ggplot2&#39;:
##   method         from 
##   [.quosures     rlang
##   c.quosures     rlang
##   print.quosures rlang</code></pre>
<pre class="r"><code>library(rgdal)</code></pre>
<pre><code>## rgdal: version: 1.4-4, (SVN revision 833)
##  Geospatial Data Abstraction Library extensions to R successfully loaded
##  Loaded GDAL runtime: GDAL 2.2.3, released 2017/11/20
##  Path to GDAL shared files: C:/Users/Lenovo/Documents/R/win-library/3.6/rgdal/gdal
##  GDAL binary built with GEOS: TRUE 
##  Loaded PROJ.4 runtime: Rel. 4.9.3, 15 August 2016, [PJ_VERSION: 493]
##  Path to PROJ.4 shared files: C:/Users/Lenovo/Documents/R/win-library/3.6/rgdal/proj
##  Linking to sp version: 1.3-1</code></pre>
<pre class="r"><code>library(mapdata)</code></pre>
<pre><code>## 载入需要的程辑包：maps</code></pre>
<pre class="r"><code># 载入中国地图数据集

china=rgdal :: readOGR(&quot;C:\\Users\\Lenovo\\Documents\\R\\win-library\\3.6\\chinaprovinceborderdata_tar_gz\\china-province-border-data\\bou2_4p.shp&quot;)</code></pre>
<pre><code>## OGR data source with driver: ESRI Shapefile 
## Source: &quot;C:\Users\Lenovo\Documents\R\win-library\3.6\chinaprovinceborderdata_tar_gz\china-province-border-data\bou2_4p.shp&quot;, layer: &quot;bou2_4p&quot;
## with 925 features
## It has 7 fields
## Integer64 fields read as strings:  BOU2_4M_ BOU2_4M_ID</code></pre>
<pre class="r"><code># 获取数据 

x&lt;-china@data

# 转换为dataframe

xs&lt;-data.frame(x,id=seq(0:924)-1)

# 将china转换为datafarme

shapefile_df &lt;- fortify(china)</code></pre>
<pre><code>## Regions defined for each Polygons</code></pre>
<pre class="r"><code># 组合成完整的dataframe

china_mapdata&lt;-merge(shapefile_df, xs, type = &quot;full&quot;) 

# 省份名称

NAME&lt;-c(&quot;北京市&quot;,&quot;天津市&quot;,&quot;河北省&quot;,&quot;山西省&quot;,&quot;内蒙古自治区&quot;,&quot;辽宁省&quot;,&quot;吉林省&quot;,&quot;黑龙江省&quot;,&quot;上海市&quot;,&quot;江苏省&quot;,&quot;浙江省&quot;,&quot;安徽省&quot;,&quot;福建省&quot;,&quot;江西省&quot;,&quot;山东省&quot;,&quot;河南省&quot;,&quot;湖北省&quot;, &quot;湖南省&quot;,&quot;广东省&quot;, &quot;广西壮族自治区&quot;,&quot;海南省&quot;, &quot;重庆市&quot;,&quot;四川省&quot;, &quot;贵州省&quot;,&quot;云南省&quot;,&quot;西藏自治区&quot;,&quot;陕西省&quot;,&quot;甘肃省&quot;,&quot;青海省&quot;,&quot;宁夏回族自治区&quot;,&quot;新疆维吾尔自治区&quot;, &quot;台湾省&quot;,&quot;香港特别行政区&quot;)

# 各个省份的人口

pop&lt;-c(7355291,3963604,20813492,10654162,8470472,15334912,9162183,13192935,8893483,25635291,20060115,19322432,11971873,11847841,30794664,26404973,17253385,19029894,32222752,13467663,2451819,10272559,26383458,10745630,12695396,689521,11084516,7113833,1586635,1945064,6902850,23193638,7026400)

# 组合成完整的d人口-省份的dataframe

pop&lt;-data.frame(NAME,pop)

# 和中国的地图信息相结合,组合成datdaframe

china_pop&lt;-merge(china_mapdata, pop, type = &quot;full&quot;)

ggplot(china_pop, aes(x = long, y = lat, group = group,fill=pop))+
  geom_polygon( )+
  geom_path(colour = &quot;grey40&quot;)</code></pre>
<p><img src="/posts/2019-06-07-用r绘制中国分省市地图_files/figure-html/unnamed-chunk-1-1.png" width="672" /></p>
]]></content>
		</item>
		
		<item>
			<title>绘制散点图</title>
			<link>/posts/2019-06-06-%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</link>
			<pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/2019-06-06-%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</guid>
			<description>library(ggplot2)p&amp;lt;-ggplot(economics,aes(x=pop,y=psavert))p+geom_point()+geom_smooth(method = &amp;quot;lm&amp;quot;,se=FALSE)</description>
			<content type="html"><![CDATA[


<pre class="r"><code>library(ggplot2)
p&lt;-ggplot(economics,aes(x=pop,y=psavert))
p+geom_point()+geom_smooth(method = &quot;lm&quot;,se=FALSE)</code></pre>
<p><img src="/posts/2019-06-06-绘制散点图_files/figure-html/unnamed-chunk-1-1.png" width="672" /></p>
]]></content>
		</item>
		
		<item>
			<title>用R做词云图</title>
			<link>/posts/2019-06-05-%E7%94%A8r%E5%81%9A%E8%AF%8D%E5%9B%BE%E4%BA%91/</link>
			<pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/2019-06-05-%E7%94%A8r%E5%81%9A%E8%AF%8D%E5%9B%BE%E4%BA%91/</guid>
			<description>library(jiebaRD)library(jiebaR)engine = worker()word &amp;lt;- scan(&amp;#39;C:\\Users\\Lenovo\\Desktop\\《三体》.txt&amp;#39;,sep=&amp;#39;\n&amp;#39;,what=&amp;#39;&amp;#39;,encoding=&amp;quot;UTF-8&amp;quot;)engine_s&amp;lt;-worker(stop_word = &amp;quot;C:\\Users\\Lenovo\\Desktop\\stopwords.txt&amp;quot;)seg&amp;lt;-segment(word,engine_s)f&amp;lt;-freq(seg)f&amp;lt;-f[order(f[2],decreasing = TRUE),]f1&amp;lt;-f[1:200,]library(wordcloud2)wordcloud2(f1,size = 3,shape = &amp;#39;triangle&amp;#39;){&#34;x&#34;:{&#34;word&#34;:[&#34;　&#34;,&#34;中&#34;,&#34;一个&#34;,&#34;说&#34;,&#34;没有&#34;,&#34;汪淼&#34;,&#34;汪&#34;,&#34;太阳&#34;,&#34;淼&#34;,&#34;文明&#34;,&#34;三体&#34;,&#34;世界&#34;,&#34;看到&#34;,&#34;知道&#34;,&#34;叶文洁&#34;,&#34;现在&#34;,&#34;叶&#34;,&#34;可能&#34;,&#34;宇宙&#34;,&#34;时&#34;,&#34;地球&#34;,&#34;文&#34;,&#34;洁&#34;,&#34;已经&#34;,&#34;信息&#34;,&#34;人类&#34;,&#34;想&#34;,&#34;会&#34;,&#34;这种&#34;,&#34;科学&#34;,&#34;出现&#34;,&#34;发现&#34;,&#34;问&#34;,&#34;更&#34;,&#34;研究&#34;,&#34;基地&#34;,&#34;红岸&#34;,&#34;起来&#34;,&#34;两个&#34;,&#34;时间&#34;,&#34;三&#34;,&#34;走&#34;,&#34;一种&#34;,&#34;里&#34;,&#34;东西&#34;,&#34;很快&#34;,&#34;进行&#34;,&#34;发射&#34;,&#34;问题&#34;,&#34;体&#34;,&#34;最后&#34;,&#34;存在&#34;,&#34;史&#34;,&#34;看着&#34;,&#34;纪元&#34;,&#34;运行&#34;,&#34;事&#34;,&#34;巨大&#34;,&#34;做&#34;,&#34;系统&#34;,&#34;没&#34;,&#34;技术&#34;,&#34;智子&#34;,&#34;前&#34;,&#34;质子&#34;,&#34;号&#34;,&#34;元首&#34;,&#34;感觉&#34;,&#34;回答&#34;,&#34;发出&#34;,&#34;出&#34;,&#34;站&#34;,&#34;真的&#34;,&#34;一次&#34;,&#34;一直&#34;,&#34;背景&#34;,&#34;计算机&#34;,&#34;一下&#34;,&#34;工作&#34;,&#34;成&#34;,&#34;派&#34;,&#34;父亲&#34;,&#34;产生&#34;,&#34;行星&#34;,&#34;游戏&#34;,&#34;能够&#34;,&#34;不同&#34;,&#34;其实&#34;,&#34;天线&#34;,&#34;声音&#34;,&#34;雷&#34;,&#34;仿佛&#34;,&#34;不会&#34;,&#34;正在&#34;,&#34;地上&#34;,&#34;执政官&#34;,&#34;请&#34;,&#34;杨&#34;,&#34;监听&#34;,&#34;孩子&#34;,&#34;三个&#34;,&#34;突然&#34;,&#34;似乎&#34;,&#34;这是&#34;,&#34;观测&#34;,&#34;看看&#34;,&#34;太空&#34;,&#34;听到&#34;,&#34;只能&#34;,&#34;日&#34;,&#34;大史&#34;,&#34;一名&#34;,&#34;外星&#34;,&#34;告诉&#34;,&#34;变成&#34;,&#34;发生&#34;,&#34;不能&#34;,&#34;后来&#34;,&#34;需要&#34;,&#34;一片&#34;,&#34;接收&#34;,&#34;应该&#34;,&#34;整个&#34;,&#34;目标&#34;,&#34;眼睛&#34;,&#34;倒计时&#34;,&#34;组织&#34;,&#34;降临&#34;,&#34;立刻&#34;,&#34;社会&#34;,&#34;带&#34;,&#34;点点头&#34;,&#34;显示&#34;,&#34;找&#34;,&#34;部分&#34;,&#34;感到&#34;,&#34;辐射&#34;,&#34;展开&#34;,&#34;以后&#34;,&#34;地说&#34;,&#34;过去&#34;,&#34;显然&#34;,&#34;进入&#34;,&#34;方向&#34;,&#34;杨卫宁&#34;,&#34;力量&#34;,&#34;有人&#34;,&#34;金字塔&#34;,&#34;乱&#34;,&#34;周文王&#34;,&#34;年&#34;,&#34;下去&#34;,&#34;理论&#34;,&#34;不要&#34;,&#34;想象&#34;,&#34;审问者&#34;,&#34;中心&#34;,&#34;完全&#34;,&#34;注意&#34;,&#34;生命&#34;,&#34;觉得&#34;,&#34;下面&#34;,&#34;一条&#34;,&#34;成为&#34;,&#34;肯定&#34;,&#34;长&#34;,&#34;消失&#34;,&#34;构成&#34;,&#34;简单&#34;,&#34;听&#34;,&#34;天空&#34;,&#34;计算&#34;,&#34;生活&#34;,&#34;几乎&#34;,&#34;事情&#34;,&#34;以前&#34;,&#34;下来&#34;,&#34;丁&#34;,&#34;速度&#34;,&#34;审判&#34;,&#34;运动&#34;,&#34;好像&#34;,&#34;收到&#34;,&#34;三颗&#34;,&#34;令&#34;,&#34;发展&#34;,&#34;想到&#34;,&#34;沉默&#34;,&#34;一只&#34;,&#34;倒&#34;,&#34;结构&#34;,&#34;一位&#34;,&#34;士兵&#34;,&#34;希望&#34;,&#34;继续&#34;,&#34;努力&#34;,&#34;位置&#34;,&#34;小时&#34;,&#34;政委&#34;,&#34;仪&#34;],&#34;freq&#34;:[5104,649,628,614,408,339,290,275,265,263,258,250,245,244,241,214,207,204,194,190,188,186,183,181,158,142,139,132,130,121,119,118,118,116,115,113,111,110,110,106,102,100,99,98,98,97,97,95,95,93,92,90,89,87,85,84,83,82,82,81,81,79,78,78,77,77,76,75,75,74,73,71,70,70,69,69,69,68,67,66,65,64,64,62,62,61,61,61,60,60,60,60,60,60,60,59,58,58,58,58,57,57,57,57,57,56,56,56,55,55,55,55,54,54,54,53,53,53,53,53,53,52,52,52,52,51,51,51,51,50,50,50,49,49,49,49,49,48,48,48,48,47,47,47,47,47,46,46,46,46,45,45,45,45,45,44,44,44,44,43,43,43,43,43,43,42,42,42,42,42,42,42,42,42,41,41,41,41,40,40,40,40,40,40,40,39,39,39,39,39,39,38,38,38,38,38,38,38,37,37],&#34;fontFamily&#34;:&#34;Segoe UI&#34;,&#34;fontWeight&#34;:&#34;bold&#34;,&#34;color&#34;:&#34;random-dark&#34;,&#34;minSize&#34;:0,&#34;weightFactor&#34;:0.105799373040752,&#34;backgroundColor&#34;:&#34;white&#34;,&#34;gridSize&#34;:0,&#34;minRotation&#34;:-0.785398163397448,&#34;maxRotation&#34;:0.785398163397448,&#34;shuffle&#34;:true,&#34;rotateRatio&#34;:0.4,&#34;shape&#34;:&#34;triangle&#34;,&#34;ellipticity&#34;:0.65,&#34;figBase64&#34;:null,&#34;hover&#34;:null},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el,x){\n console.log(123);\n if(!iii){\n window.location.reload();\n iii = False;\n\n }\n }&#34;,&#34;data&#34;:null}]}}</description>
			<content type="html"><![CDATA[
<script src="/rmarkdown-libs/htmlwidgets/htmlwidgets.js"></script>
<link href="/rmarkdown-libs/wordcloud2/wordcloud.css" rel="stylesheet" />
<script src="/rmarkdown-libs/wordcloud2/wordcloud2-all.js"></script>
<script src="/rmarkdown-libs/wordcloud2/hover.js"></script>
<script src="/rmarkdown-libs/wordcloud2-binding/wordcloud2.js"></script>


<pre class="r"><code>library(jiebaRD)

library(jiebaR)

engine = worker()

word &lt;- scan(&#39;C:\\Users\\Lenovo\\Desktop\\《三体》.txt&#39;,sep=&#39;\n&#39;,what=&#39;&#39;,encoding=&quot;UTF-8&quot;)

engine_s&lt;-worker(stop_word = &quot;C:\\Users\\Lenovo\\Desktop\\stopwords.txt&quot;)

seg&lt;-segment(word,engine_s)

f&lt;-freq(seg)

f&lt;-f[order(f[2],decreasing = TRUE),]

f1&lt;-f[1:200,]

library(wordcloud2)

wordcloud2(f1,size = 3,shape = &#39;triangle&#39;)</code></pre>
<div id="htmlwidget-1" style="width:672px;height:480px;" class="wordcloud2 html-widget"></div>
<script type="application/json" data-for="htmlwidget-1">{"x":{"word":["　","中","一个","说","没有","汪淼","汪","太阳","淼","文明","三体","世界","看到","知道","叶文洁","现在","叶","可能","宇宙","时","地球","文","洁","已经","信息","人类","想","会","这种","科学","出现","发现","问","更","研究","基地","红岸","起来","两个","时间","三","走","一种","里","东西","很快","进行","发射","问题","体","最后","存在","史","看着","纪元","运行","事","巨大","做","系统","没","技术","智子","前","质子","号","元首","感觉","回答","发出","出","站","真的","一次","一直","背景","计算机","一下","工作","成","派","父亲","产生","行星","游戏","能够","不同","其实","天线","声音","雷","仿佛","不会","正在","地上","执政官","请","杨","监听","孩子","三个","突然","似乎","这是","观测","看看","太空","听到","只能","日","大史","一名","外星","告诉","变成","发生","不能","后来","需要","一片","接收","应该","整个","目标","眼睛","倒计时","组织","降临","立刻","社会","带","点点头","显示","找","部分","感到","辐射","展开","以后","地说","过去","显然","进入","方向","杨卫宁","力量","有人","金字塔","乱","周文王","年","下去","理论","不要","想象","审问者","中心","完全","注意","生命","觉得","下面","一条","成为","肯定","长","消失","构成","简单","听","天空","计算","生活","几乎","事情","以前","下来","丁","速度","审判","运动","好像","收到","三颗","令","发展","想到","沉默","一只","倒","结构","一位","士兵","希望","继续","努力","位置","小时","政委","仪"],"freq":[5104,649,628,614,408,339,290,275,265,263,258,250,245,244,241,214,207,204,194,190,188,186,183,181,158,142,139,132,130,121,119,118,118,116,115,113,111,110,110,106,102,100,99,98,98,97,97,95,95,93,92,90,89,87,85,84,83,82,82,81,81,79,78,78,77,77,76,75,75,74,73,71,70,70,69,69,69,68,67,66,65,64,64,62,62,61,61,61,60,60,60,60,60,60,60,59,58,58,58,58,57,57,57,57,57,56,56,56,55,55,55,55,54,54,54,53,53,53,53,53,53,52,52,52,52,51,51,51,51,50,50,50,49,49,49,49,49,48,48,48,48,47,47,47,47,47,46,46,46,46,45,45,45,45,45,44,44,44,44,43,43,43,43,43,43,42,42,42,42,42,42,42,42,42,41,41,41,41,40,40,40,40,40,40,40,39,39,39,39,39,39,38,38,38,38,38,38,38,37,37],"fontFamily":"Segoe UI","fontWeight":"bold","color":"random-dark","minSize":0,"weightFactor":0.105799373040752,"backgroundColor":"white","gridSize":0,"minRotation":-0.785398163397448,"maxRotation":0.785398163397448,"shuffle":true,"rotateRatio":0.4,"shape":"triangle","ellipticity":0.65,"figBase64":null,"hover":null},"evals":[],"jsHooks":{"render":[{"code":"function(el,x){\n                        console.log(123);\n                        if(!iii){\n                          window.location.reload();\n                          iii = False;\n\n                        }\n  }","data":null}]}}</script>
]]></content>
		</item>
		
		<item>
			<title>用R画流程图</title>
			<link>/posts/2019-06-05-%E7%94%A8r%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</link>
			<pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/2019-06-05-%E7%94%A8r%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</guid>
			<description>library(DiagrammeR)grViz(&amp;quot;digraph fig{scu[label=&amp;#39;四川大学&amp;#39;,shape=box,color=red]scu-&amp;gt;{a,b,c,d}a[label=&amp;#39;公管&amp;#39;shape=box,color=glod]}&amp;quot;){&#34;x&#34;:{&#34;diagram&#34;:&#34;digraph fig{scu[label=\&#34;四川大学\&#34;,shape=box,color=red]\nscu-{a,b,c,d}\na[label=\&#34;公管\&#34;shape=box,color=glod]\n}&#34;,&#34;config&#34;:{&#34;engine&#34;:&#34;dot&#34;,&#34;options&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}</description>
			<content type="html"><![CDATA[
<script src="/rmarkdown-libs/htmlwidgets/htmlwidgets.js"></script>
<script src="/rmarkdown-libs/viz/viz.js"></script>
<link href="/rmarkdown-libs/DiagrammeR-styles/styles.css" rel="stylesheet" />
<script src="/rmarkdown-libs/grViz-binding/grViz.js"></script>


<pre class="r"><code>library(DiagrammeR)
grViz(&quot;digraph fig{scu[label=&#39;四川大学&#39;,shape=box,color=red]
scu-&gt;{a,b,c,d}
a[label=&#39;公管&#39;shape=box,color=glod]
}&quot;)</code></pre>
<div id="htmlwidget-1" style="width:672px;height:480px;" class="grViz html-widget"></div>
<script type="application/json" data-for="htmlwidget-1">{"x":{"diagram":"digraph fig{scu[label=\"四川大学\",shape=box,color=red]\nscu->{a,b,c,d}\na[label=\"公管\"shape=box,color=glod]\n}","config":{"engine":"dot","options":null}},"evals":[],"jsHooks":[]}</script>
]]></content>
		</item>
		
		<item>
			<title>用R语言搭建个人博客网站</title>
			<link>/posts/%E7%94%A8r%E8%AF%AD%E8%A8%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</link>
			<pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/%E7%94%A8r%E8%AF%AD%E8%A8%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</guid>
			<description>一、准备第一步：安装R，Rstudio，Git
第二步：注册Github账号
第三步：生成 SSH 公钥
安装好 Git 后，打开Git Bash，输入命令：$ ssh-keygen -t rsa -C “你的GitHub注册邮箱”然后直接三个回车即可，最后得到了两个文件：id_rsa和id_rsa.pub。打开 id_rsa.pub 文件将里面的内容全部复制，或者输入命令，把key复制到剪贴板：$ clip &amp;lt; ~/.ssh/id_rsa.pub登录Github，选择Personal settings-&amp;gt;SSH and GPG keys-&amp;gt;New SSH key，将密钥粘贴到Key下的文本框内，点击Add SSH Key。 第四步：打开Rstudio，安装 blogdown包，在Console中输入命令：install.packages(“blogdown”)二、用Rstudio编辑博客系统配置需要的环境后，你就可以通过Rstudio来生成blog了。
第一步：新建一个Rblogdown项目
打开Rstudio，选择File-&amp;gt;New Project-&amp;gt;New Directory-&amp;gt;Website using blogdown。在弹出的New Project对话框中的Hugo theme中可替换hugo主题，hugo主题可以在https://themes.gohugo.io/中获得。上述过程也可以通过命令来实现：blogdown::new_site(theme = “xxx”) 。第二步：你会在你的Rstudio中看到项目文件的列表：
config.toml: 这是博客的配置文件，可以在这里修改和配置博客的一些全局信息。index.Rmd: 最终生成index.html 。content文件夹: 这里存放了要Post的R markdown 文档或markdown文档。public文件夹：最终博客生成的html文件和一些静态资源文件会放在这里。static文件夹: blogdown需要的一些静态资源文件，像css文件，图片，视频等文件。themes文件夹: hugo主题，blogdown引入的hugo主题会下载到这个文件夹。第三步：输入命令：blogdown::serve_site()可以启动你的博客网站，并在Viewer中显示运行的博客</description>
			<content type="html"><![CDATA[


<div class="section level2">
<h2>一、准备</h2>
<p><strong>第一步：安装R，Rstudio，Git</strong></p>
<p><strong>第二步：注册Github账号</strong></p>
<p><strong>第三步：生成 SSH 公钥</strong></p>
<ol style="list-style-type: decimal">
<li>安装好 Git 后，打开Git Bash，输入命令：$ ssh-keygen -t rsa -C “你的GitHub注册邮箱”</li>
<li>然后直接三个回车即可，最后得到了两个文件：id_rsa和id_rsa.pub。</li>
<li>打开 id_rsa.pub 文件将里面的内容全部复制，或者输入命令，把key复制到剪贴板：$ clip &lt; ~/.ssh/id_rsa.pub</li>
<li>登录Github，选择Personal settings-&gt;SSH and GPG keys-&gt;New SSH key，将密钥粘贴到Key下的文本框内，点击Add SSH Key。 第四步：打开Rstudio，安装 blogdown包，在Console中输入命令：install.packages(“blogdown”)</li>
</ol>
</div>
<div id="rstudio" class="section level2">
<h2>二、用Rstudio编辑博客系统</h2>
<p>配置需要的环境后，你就可以通过Rstudio来生成blog了。</p>
<p><strong>第一步：新建一个Rblogdown项目</strong></p>
<ol style="list-style-type: decimal">
<li>打开Rstudio，选择File-&gt;New Project-&gt;New Directory-&gt;Website using blogdown。</li>
<li>在弹出的New Project对话框中的Hugo theme中可替换hugo主题，hugo主题可以在https://themes.gohugo.io/中获得。</li>
<li>上述过程也可以通过命令来实现：blogdown::new_site(theme = “xxx”) 。</li>
</ol>
<p><strong>第二步：你会在你的Rstudio中看到项目文件的列表：</strong></p>
<ul>
<li>config.toml: 这是博客的配置文件，可以在这里修改和配置博客的一些全局信息。</li>
<li>index.Rmd: 最终生成index.html 。</li>
<li>content文件夹: 这里存放了要Post的R markdown 文档或markdown文档。</li>
<li>public文件夹：最终博客生成的html文件和一些静态资源文件会放在这里。</li>
<li>static文件夹: blogdown需要的一些静态资源文件，像css文件，图片，视频等文件。</li>
<li>themes文件夹: hugo主题，blogdown引入的hugo主题会下载到这个文件夹。</li>
</ul>
<p><strong>第三步：输入命令：blogdown::serve_site()可以启动你的博客网站，并在Viewer中显示运行的博客</strong></p>
<p><strong>第四步：Post你的Rmd博文</strong></p>
<ol style="list-style-type: decimal">
<li>content文件夹中的内容就是你要Post的内容，需先删除掉content-&gt;post文件夹下的文件，同时你也可以更改about.md文件的内容。</li>
<li>清空文件夹后你就可以按照下面的步骤Post自己的博文：tools-&gt;Addins-&gt;blogdown New Post-&gt;Excute</li>
<li>新建一个Post的Rmd文档,填写好标题、作者等内容后，点击Done，即可在Post的文件夹下看到生成的Rmd文档，你就可以编辑博文内容。</li>
<li>保存后生成你的博客：files-&gt;save</li>
</ol>
</div>
<div class="section level2">
<h2>三、部署网站</h2>
<p><strong>第一步：将博客托管到GitHub</strong></p>
<ol style="list-style-type: decimal">
<li>登录 GitHub，点击 GitHub 中的 New repository 创建新仓库。</li>
<li>在新仓库界面的clone or download下复制代码仓库地址。</li>
<li>打开Rstudio，选择File-&gt;Version Control，在对话框中的Repository URL下粘贴刚复制的代码地址，点击Create Project。</li>
<li>在Rstudio上的Github图标下拉选择push，将弹出对话框显示push过程，成功后打开github中对应的仓库，可以看到你本地博客网页的所有代码文件都已经上传到github上。</li>
</ol>
<p><strong>第二步：将博客托管到Netlify</strong></p>
<ol style="list-style-type: decimal">
<li>注册登录Netlify(<a href="https://app.netlify.com/signup" class="uri">https://app.netlify.com/signup</a>),可以直接通过GitHub账号登录。</li>
<li>点击 New site from git，点击GitHub，搜索GitHub中仓库的名称，填写部署的相关信息并点击部署。</li>
<li>在部署完成的界面中点击黄色字体site deploy in progress，将你的博客文件夹下的public文件夹拖到下方的空白区域中，上传成功后上面就显示生成了你的博客网址。</li>
</ol>
</div>
]]></content>
		</item>
		
	</channel>
</rss>
