<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Hugo Hermit</title>
		<link>/posts/</link>
		<description>Recent content in Posts on Hugo Hermit</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
		<lastBuildDate>Thu, 06 Jun 2019 00:00:00 +0000</lastBuildDate>
		<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>中国人口地图</title>
			<link>/posts/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%8F%A3%E5%9C%B0%E5%9B%BE/</link>
			<pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/%E4%B8%AD%E5%9B%BD%E4%BA%BA%E5%8F%A3%E5%9C%B0%E5%9B%BE/</guid>
			<description>library(sp) library(maptools) library(rgdal) library(ggplot2) # 载入中国地图数据集 china=readShapePoly(‘E:\Udacity\Data Analysis High\R\R_Study\第一天数据\bou2_4p.shp’) # 获取数据
x&amp;lt;-china@data # 转换为datafarme xs&amp;lt;-data.frame(x,id=seq(0:924)-1) # 将china转换为datafarme shapefile_df &amp;lt;- fortify(china) # 组合成完整的dataframe china_mapdata&amp;lt;-join(shapefile_df, xs, type = “full”) # 省份名称 NAME&amp;lt;-c(“北京市”,“天津市”,“河北省”,“山西省”,“内蒙古自治区”,“辽宁省”,“吉林省”, “黑龙江省”,“上海市”,“江苏省”,“浙江省”,“安徽省”,“福建省”, “江西省”,“山东省”,“河南省”, “湖北省”, “湖南省”,“广东省”, “广西壮族自治区”,“海南省”, “重庆市”,“四川省”, “贵州省”, “云南省”,“西藏自治区”,“陕西省”,“甘肃省”,“青海省”,“宁夏回族自治区”,“新疆维吾尔自治区”, “台湾省”,“香港特别行政区”) # 各个省份的人口 pop&amp;lt;-c(7355291,3963604,20813492,10654162,8470472,15334912,9162183,13192935,8893483,25635291,20060115,19322432,11971873,11847841,30794664,26404973, 17253385,19029894,32222752,13467663,2451819,10272559,26383458,10745630, 12695396,689521,11084516,7113833,1586635,1945064,6902850,23193638,7026400) # 组合成完整的d人口-省份的dataframe pop&amp;lt;-data.frame(NAME,pop) # 和中国的地图信息相结合,组合成datdaframe china_pop&amp;lt;-join(china_mapdata, pop, type = “full”)
ggplot(china_pop, aes(x = long, y = lat, group = group,fill=pop))+ geom_polygon( )+ geom_path(colour = “grey40”)</description>
			<content type="html"><![CDATA[


<p>library(sp) library(maptools) library(rgdal) library(ggplot2) # 载入中国地图数据集 china=readShapePoly(‘E:\Udacity\Data Analysis High\R\R_Study\第一天数据\bou2_4p.shp’) # 获取数据<br />
x&lt;-<a href="mailto:china@data">china@data</a> # 转换为datafarme xs&lt;-data.frame(x,id=seq(0:924)-1) # 将china转换为datafarme shapefile_df &lt;- fortify(china) # 组合成完整的dataframe china_mapdata&lt;-join(shapefile_df, xs, type = “full”) # 省份名称 NAME&lt;-c(“北京市”,“天津市”,“河北省”,“山西省”,“内蒙古自治区”,“辽宁省”,“吉林省”, “黑龙江省”,“上海市”,“江苏省”,“浙江省”,“安徽省”,“福建省”, “江西省”,“山东省”,“河南省”, “湖北省”, “湖南省”,“广东省”, “广西壮族自治区”,“海南省”, “重庆市”,“四川省”, “贵州省”, “云南省”,“西藏自治区”,“陕西省”,“甘肃省”,“青海省”,“宁夏回族自治区”,“新疆维吾尔自治区”, “台湾省”,“香港特别行政区”) # 各个省份的人口 pop&lt;-c(7355291,3963604,20813492,10654162,8470472,15334912,9162183,13192935,8893483,25635291,20060115,19322432,11971873,11847841,30794664,26404973, 17253385,19029894,32222752,13467663,2451819,10272559,26383458,10745630, 12695396,689521,11084516,7113833,1586635,1945064,6902850,23193638,7026400) # 组合成完整的d人口-省份的dataframe pop&lt;-data.frame(NAME,pop) # 和中国的地图信息相结合,组合成datdaframe china_pop&lt;-join(china_mapdata, pop, type = “full”)</p>
<p>ggplot(china_pop, aes(x = long, y = lat, group = group,fill=pop))+ geom_polygon( )+ geom_path(colour = “grey40”)</p>
]]></content>
		</item>
		
		<item>
			<title>绘制散点图</title>
			<link>/posts/2019-06-06-%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</link>
			<pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/2019-06-06-%E7%BB%98%E5%88%B6%E6%95%A3%E7%82%B9%E5%9B%BE/</guid>
			<description>library(ggplot2)p&amp;lt;-ggplot(economics,aes(x=pop,y=psavert))p+geom_point()+geom_smooth(method = &amp;quot;lm&amp;quot;,se=FALSE)</description>
			<content type="html"><![CDATA[


<pre class="r"><code>library(ggplot2)
p&lt;-ggplot(economics,aes(x=pop,y=psavert))
p+geom_point()+geom_smooth(method = &quot;lm&quot;,se=FALSE)</code></pre>
<p><img src="/posts/2019-06-06-绘制散点图_files/figure-html/unnamed-chunk-1-1.png" width="672" /></p>
]]></content>
		</item>
		
		<item>
			<title>用R做词图云1</title>
			<link>/posts/%E7%94%A8r%E5%81%9A%E8%AF%8D%E5%9B%BE%E4%BA%91/</link>
			<pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/%E7%94%A8r%E5%81%9A%E8%AF%8D%E5%9B%BE%E4%BA%91/</guid>
			<description>library(jiebaRD)library(jiebaR)engine = worker()word &amp;lt;- scan(&amp;#39;C:\\Users\\Lenovo\\Desktop\\《三体》.txt&amp;#39;,sep=&amp;#39;\n&amp;#39;,what=&amp;#39;&amp;#39;,encoding=&amp;quot;UTF-8&amp;quot;)engine_s&amp;lt;-worker(stop_word = &amp;quot;C:\\Users\\Lenovo\\Desktop\\stopwords.txt&amp;quot;)seg&amp;lt;-segment(word,engine_s)f&amp;lt;-freq(seg)f&amp;lt;-f[order(f[2],decreasing = TRUE),]f1&amp;lt;-f[1:200,]library(wordcloud2)wordcloud2(f1,size = 3,shape = &amp;#39;triangle&amp;#39;){&#34;x&#34;:{&#34;word&#34;:[&#34;　&#34;,&#34;中&#34;,&#34;一个&#34;,&#34;说&#34;,&#34;没有&#34;,&#34;汪淼&#34;,&#34;汪&#34;,&#34;太阳&#34;,&#34;淼&#34;,&#34;文明&#34;,&#34;三体&#34;,&#34;世界&#34;,&#34;看到&#34;,&#34;知道&#34;,&#34;叶文洁&#34;,&#34;现在&#34;,&#34;叶&#34;,&#34;可能&#34;,&#34;宇宙&#34;,&#34;时&#34;,&#34;地球&#34;,&#34;文&#34;,&#34;洁&#34;,&#34;已经&#34;,&#34;信息&#34;,&#34;人类&#34;,&#34;想&#34;,&#34;会&#34;,&#34;这种&#34;,&#34;科学&#34;,&#34;出现&#34;,&#34;发现&#34;,&#34;问&#34;,&#34;更&#34;,&#34;研究&#34;,&#34;基地&#34;,&#34;红岸&#34;,&#34;起来&#34;,&#34;两个&#34;,&#34;时间&#34;,&#34;三&#34;,&#34;走&#34;,&#34;一种&#34;,&#34;里&#34;,&#34;东西&#34;,&#34;很快&#34;,&#34;进行&#34;,&#34;发射&#34;,&#34;问题&#34;,&#34;体&#34;,&#34;最后&#34;,&#34;存在&#34;,&#34;史&#34;,&#34;看着&#34;,&#34;纪元&#34;,&#34;运行&#34;,&#34;事&#34;,&#34;巨大&#34;,&#34;做&#34;,&#34;系统&#34;,&#34;没&#34;,&#34;技术&#34;,&#34;智子&#34;,&#34;前&#34;,&#34;质子&#34;,&#34;号&#34;,&#34;元首&#34;,&#34;感觉&#34;,&#34;回答&#34;,&#34;发出&#34;,&#34;出&#34;,&#34;站&#34;,&#34;真的&#34;,&#34;一次&#34;,&#34;一直&#34;,&#34;背景&#34;,&#34;计算机&#34;,&#34;一下&#34;,&#34;工作&#34;,&#34;成&#34;,&#34;派&#34;,&#34;父亲&#34;,&#34;产生&#34;,&#34;行星&#34;,&#34;游戏&#34;,&#34;能够&#34;,&#34;不同&#34;,&#34;其实&#34;,&#34;天线&#34;,&#34;声音&#34;,&#34;雷&#34;,&#34;仿佛&#34;,&#34;不会&#34;,&#34;正在&#34;,&#34;地上&#34;,&#34;执政官&#34;,&#34;请&#34;,&#34;杨&#34;,&#34;监听&#34;,&#34;孩子&#34;,&#34;三个&#34;,&#34;突然&#34;,&#34;似乎&#34;,&#34;这是&#34;,&#34;观测&#34;,&#34;看看&#34;,&#34;太空&#34;,&#34;听到&#34;,&#34;只能&#34;,&#34;日&#34;,&#34;大史&#34;,&#34;一名&#34;,&#34;外星&#34;,&#34;告诉&#34;,&#34;变成&#34;,&#34;发生&#34;,&#34;不能&#34;,&#34;后来&#34;,&#34;需要&#34;,&#34;一片&#34;,&#34;接收&#34;,&#34;应该&#34;,&#34;整个&#34;,&#34;目标&#34;,&#34;眼睛&#34;,&#34;倒计时&#34;,&#34;组织&#34;,&#34;降临&#34;,&#34;立刻&#34;,&#34;社会&#34;,&#34;带&#34;,&#34;点点头&#34;,&#34;显示&#34;,&#34;找&#34;,&#34;部分&#34;,&#34;感到&#34;,&#34;辐射&#34;,&#34;展开&#34;,&#34;以后&#34;,&#34;地说&#34;,&#34;过去&#34;,&#34;显然&#34;,&#34;进入&#34;,&#34;方向&#34;,&#34;杨卫宁&#34;,&#34;力量&#34;,&#34;有人&#34;,&#34;金字塔&#34;,&#34;乱&#34;,&#34;周文王&#34;,&#34;年&#34;,&#34;下去&#34;,&#34;理论&#34;,&#34;不要&#34;,&#34;想象&#34;,&#34;审问者&#34;,&#34;中心&#34;,&#34;完全&#34;,&#34;注意&#34;,&#34;生命&#34;,&#34;觉得&#34;,&#34;下面&#34;,&#34;一条&#34;,&#34;成为&#34;,&#34;肯定&#34;,&#34;长&#34;,&#34;消失&#34;,&#34;构成&#34;,&#34;简单&#34;,&#34;听&#34;,&#34;天空&#34;,&#34;计算&#34;,&#34;生活&#34;,&#34;几乎&#34;,&#34;事情&#34;,&#34;以前&#34;,&#34;下来&#34;,&#34;丁&#34;,&#34;速度&#34;,&#34;审判&#34;,&#34;运动&#34;,&#34;好像&#34;,&#34;收到&#34;,&#34;三颗&#34;,&#34;令&#34;,&#34;发展&#34;,&#34;想到&#34;,&#34;沉默&#34;,&#34;一只&#34;,&#34;倒&#34;,&#34;结构&#34;,&#34;一位&#34;,&#34;士兵&#34;,&#34;希望&#34;,&#34;继续&#34;,&#34;努力&#34;,&#34;位置&#34;,&#34;小时&#34;,&#34;政委&#34;,&#34;仪&#34;],&#34;freq&#34;:[5104,649,628,614,408,339,290,275,265,263,258,250,245,244,241,214,207,204,194,190,188,186,183,181,158,142,139,132,130,121,119,118,118,116,115,113,111,110,110,106,102,100,99,98,98,97,97,95,95,93,92,90,89,87,85,84,83,82,82,81,81,79,78,78,77,77,76,75,75,74,73,71,70,70,69,69,69,68,67,66,65,64,64,62,62,61,61,61,60,60,60,60,60,60,60,59,58,58,58,58,57,57,57,57,57,56,56,56,55,55,55,55,54,54,54,53,53,53,53,53,53,52,52,52,52,51,51,51,51,50,50,50,49,49,49,49,49,48,48,48,48,47,47,47,47,47,46,46,46,46,45,45,45,45,45,44,44,44,44,43,43,43,43,43,43,42,42,42,42,42,42,42,42,42,41,41,41,41,40,40,40,40,40,40,40,39,39,39,39,39,39,38,38,38,38,38,38,38,37,37],&#34;fontFamily&#34;:&#34;Segoe UI&#34;,&#34;fontWeight&#34;:&#34;bold&#34;,&#34;color&#34;:&#34;random-dark&#34;,&#34;minSize&#34;:0,&#34;weightFactor&#34;:0.105799373040752,&#34;backgroundColor&#34;:&#34;white&#34;,&#34;gridSize&#34;:0,&#34;minRotation&#34;:-0.785398163397448,&#34;maxRotation&#34;:0.785398163397448,&#34;shuffle&#34;:true,&#34;rotateRatio&#34;:0.4,&#34;shape&#34;:&#34;triangle&#34;,&#34;ellipticity&#34;:0.65,&#34;figBase64&#34;:null,&#34;hover&#34;:null},&#34;evals&#34;:[],&#34;jsHooks&#34;:{&#34;render&#34;:[{&#34;code&#34;:&#34;function(el,x){\n console.log(123);\n if(!iii){\n window.location.reload();\n iii = False;\n\n }\n }&#34;,&#34;data&#34;:null}]}}</description>
			<content type="html"><![CDATA[
<script src="/rmarkdown-libs/htmlwidgets/htmlwidgets.js"></script>
<link href="/rmarkdown-libs/wordcloud2/wordcloud.css" rel="stylesheet" />
<script src="/rmarkdown-libs/wordcloud2/wordcloud2-all.js"></script>
<script src="/rmarkdown-libs/wordcloud2/hover.js"></script>
<script src="/rmarkdown-libs/wordcloud2-binding/wordcloud2.js"></script>


<pre class="r"><code>library(jiebaRD)

library(jiebaR)

engine = worker()

word &lt;- scan(&#39;C:\\Users\\Lenovo\\Desktop\\《三体》.txt&#39;,sep=&#39;\n&#39;,what=&#39;&#39;,encoding=&quot;UTF-8&quot;)

engine_s&lt;-worker(stop_word = &quot;C:\\Users\\Lenovo\\Desktop\\stopwords.txt&quot;)

seg&lt;-segment(word,engine_s)

f&lt;-freq(seg)

f&lt;-f[order(f[2],decreasing = TRUE),]

f1&lt;-f[1:200,]

library(wordcloud2)

wordcloud2(f1,size = 3,shape = &#39;triangle&#39;)</code></pre>
<div id="htmlwidget-1" style="width:672px;height:480px;" class="wordcloud2 html-widget"></div>
<script type="application/json" data-for="htmlwidget-1">{"x":{"word":["　","中","一个","说","没有","汪淼","汪","太阳","淼","文明","三体","世界","看到","知道","叶文洁","现在","叶","可能","宇宙","时","地球","文","洁","已经","信息","人类","想","会","这种","科学","出现","发现","问","更","研究","基地","红岸","起来","两个","时间","三","走","一种","里","东西","很快","进行","发射","问题","体","最后","存在","史","看着","纪元","运行","事","巨大","做","系统","没","技术","智子","前","质子","号","元首","感觉","回答","发出","出","站","真的","一次","一直","背景","计算机","一下","工作","成","派","父亲","产生","行星","游戏","能够","不同","其实","天线","声音","雷","仿佛","不会","正在","地上","执政官","请","杨","监听","孩子","三个","突然","似乎","这是","观测","看看","太空","听到","只能","日","大史","一名","外星","告诉","变成","发生","不能","后来","需要","一片","接收","应该","整个","目标","眼睛","倒计时","组织","降临","立刻","社会","带","点点头","显示","找","部分","感到","辐射","展开","以后","地说","过去","显然","进入","方向","杨卫宁","力量","有人","金字塔","乱","周文王","年","下去","理论","不要","想象","审问者","中心","完全","注意","生命","觉得","下面","一条","成为","肯定","长","消失","构成","简单","听","天空","计算","生活","几乎","事情","以前","下来","丁","速度","审判","运动","好像","收到","三颗","令","发展","想到","沉默","一只","倒","结构","一位","士兵","希望","继续","努力","位置","小时","政委","仪"],"freq":[5104,649,628,614,408,339,290,275,265,263,258,250,245,244,241,214,207,204,194,190,188,186,183,181,158,142,139,132,130,121,119,118,118,116,115,113,111,110,110,106,102,100,99,98,98,97,97,95,95,93,92,90,89,87,85,84,83,82,82,81,81,79,78,78,77,77,76,75,75,74,73,71,70,70,69,69,69,68,67,66,65,64,64,62,62,61,61,61,60,60,60,60,60,60,60,59,58,58,58,58,57,57,57,57,57,56,56,56,55,55,55,55,54,54,54,53,53,53,53,53,53,52,52,52,52,51,51,51,51,50,50,50,49,49,49,49,49,48,48,48,48,47,47,47,47,47,46,46,46,46,45,45,45,45,45,44,44,44,44,43,43,43,43,43,43,42,42,42,42,42,42,42,42,42,41,41,41,41,40,40,40,40,40,40,40,39,39,39,39,39,39,38,38,38,38,38,38,38,37,37],"fontFamily":"Segoe UI","fontWeight":"bold","color":"random-dark","minSize":0,"weightFactor":0.105799373040752,"backgroundColor":"white","gridSize":0,"minRotation":-0.785398163397448,"maxRotation":0.785398163397448,"shuffle":true,"rotateRatio":0.4,"shape":"triangle","ellipticity":0.65,"figBase64":null,"hover":null},"evals":[],"jsHooks":{"render":[{"code":"function(el,x){\n                        console.log(123);\n                        if(!iii){\n                          window.location.reload();\n                          iii = False;\n\n                        }\n  }","data":null}]}}</script>
]]></content>
		</item>
		
		<item>
			<title>用R画流程图</title>
			<link>/posts/2019-06-05-%E7%94%A8r%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</link>
			<pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/2019-06-05-%E7%94%A8r%E7%94%BB%E6%B5%81%E7%A8%8B%E5%9B%BE/</guid>
			<description>library(DiagrammeR)grViz(&amp;quot;digraph fig{scu[label=&amp;#39;四川大学&amp;#39;,shape=box,color=red]scu-&amp;gt;{a,b,c,d}a[label=&amp;#39;公管&amp;#39;shape=box,color=glod]}&amp;quot;){&#34;x&#34;:{&#34;diagram&#34;:&#34;digraph fig{scu[label=\&#34;四川大学\&#34;,shape=box,color=red]\nscu-{a,b,c,d}\na[label=\&#34;公管\&#34;shape=box,color=glod]\n}&#34;,&#34;config&#34;:{&#34;engine&#34;:&#34;dot&#34;,&#34;options&#34;:null}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}</description>
			<content type="html"><![CDATA[
<script src="/rmarkdown-libs/htmlwidgets/htmlwidgets.js"></script>
<script src="/rmarkdown-libs/viz/viz.js"></script>
<link href="/rmarkdown-libs/DiagrammeR-styles/styles.css" rel="stylesheet" />
<script src="/rmarkdown-libs/grViz-binding/grViz.js"></script>


<pre class="r"><code>library(DiagrammeR)
grViz(&quot;digraph fig{scu[label=&#39;四川大学&#39;,shape=box,color=red]
scu-&gt;{a,b,c,d}
a[label=&#39;公管&#39;shape=box,color=glod]
}&quot;)</code></pre>
<div id="htmlwidget-1" style="width:672px;height:480px;" class="grViz html-widget"></div>
<script type="application/json" data-for="htmlwidget-1">{"x":{"diagram":"digraph fig{scu[label=\"四川大学\",shape=box,color=red]\nscu->{a,b,c,d}\na[label=\"公管\"shape=box,color=glod]\n}","config":{"engine":"dot","options":null}},"evals":[],"jsHooks":[]}</script>
]]></content>
		</item>
		
		<item>
			<title>用R语言搭建个人博客网站</title>
			<link>/posts/%E7%94%A8r%E8%AF%AD%E8%A8%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</link>
			<pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
			
			<guid>/posts/%E7%94%A8r%E8%AF%AD%E8%A8%80%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</guid>
			<description>一、准备第一步：安装R，Rstudio，Git
第二步：注册Github账号
第三步：生成 SSH 公钥
安装好 Git 后，打开Git Bash，输入命令：$ ssh-keygen -t rsa -C “你的GitHub注册邮箱”然后直接三个回车即可，最后得到了两个文件：id_rsa和id_rsa.pub。打开 id_rsa.pub 文件将里面的内容全部复制，或者输入命令，把key复制到剪贴板：$ clip &amp;lt; ~/.ssh/id_rsa.pub登录Github，选择Personal settings-&amp;gt;SSH and GPG keys-&amp;gt;New SSH key，将密钥粘贴到Key下的文本框内，点击Add SSH Key。 第四步：打开Rstudio，安装 blogdown包，在Console中输入命令：install.packages(“blogdown”)二、用Rstudio编辑博客系统配置需要的环境后，你就可以通过Rstudio来生成blog了。
第一步：新建一个Rblogdown项目
打开Rstudio，选择File-&amp;gt;New Project-&amp;gt;New Directory-&amp;gt;Website using blogdown。在弹出的New Project对话框中的Hugo theme中可替换hugo主题，hugo主题可以在https://themes.gohugo.io/中获得。上述过程也可以通过命令来实现：blogdown::new_site(theme = “xxx”) 。第二步：你会在你的Rstudio中看到项目文件的列表：
config.toml: 这是博客的配置文件，可以在这里修改和配置博客的一些全局信息。index.Rmd: 最终生成index.html 。content文件夹: 这里存放了要Post的R markdown 文档或markdown文档。public文件夹：最终博客生成的html文件和一些静态资源文件会放在这里。static文件夹: blogdown需要的一些静态资源文件，像css文件，图片，视频等文件。themes文件夹: hugo主题，blogdown引入的hugo主题会下载到这个文件夹。第三步：输入命令：blogdown::serve_site()可以启动你的博客网站，并在Viewer中显示运行的博客</description>
			<content type="html"><![CDATA[


<div class="section level2">
<h2>一、准备</h2>
<p><strong>第一步：安装R，Rstudio，Git</strong></p>
<p><strong>第二步：注册Github账号</strong></p>
<p><strong>第三步：生成 SSH 公钥</strong></p>
<ol style="list-style-type: decimal">
<li>安装好 Git 后，打开Git Bash，输入命令：$ ssh-keygen -t rsa -C “你的GitHub注册邮箱”</li>
<li>然后直接三个回车即可，最后得到了两个文件：id_rsa和id_rsa.pub。</li>
<li>打开 id_rsa.pub 文件将里面的内容全部复制，或者输入命令，把key复制到剪贴板：$ clip &lt; ~/.ssh/id_rsa.pub</li>
<li>登录Github，选择Personal settings-&gt;SSH and GPG keys-&gt;New SSH key，将密钥粘贴到Key下的文本框内，点击Add SSH Key。 第四步：打开Rstudio，安装 blogdown包，在Console中输入命令：install.packages(“blogdown”)</li>
</ol>
</div>
<div id="rstudio" class="section level2">
<h2>二、用Rstudio编辑博客系统</h2>
<p>配置需要的环境后，你就可以通过Rstudio来生成blog了。</p>
<p><strong>第一步：新建一个Rblogdown项目</strong></p>
<ol style="list-style-type: decimal">
<li>打开Rstudio，选择File-&gt;New Project-&gt;New Directory-&gt;Website using blogdown。</li>
<li>在弹出的New Project对话框中的Hugo theme中可替换hugo主题，hugo主题可以在https://themes.gohugo.io/中获得。</li>
<li>上述过程也可以通过命令来实现：blogdown::new_site(theme = “xxx”) 。</li>
</ol>
<p><strong>第二步：你会在你的Rstudio中看到项目文件的列表：</strong></p>
<ul>
<li>config.toml: 这是博客的配置文件，可以在这里修改和配置博客的一些全局信息。</li>
<li>index.Rmd: 最终生成index.html 。</li>
<li>content文件夹: 这里存放了要Post的R markdown 文档或markdown文档。</li>
<li>public文件夹：最终博客生成的html文件和一些静态资源文件会放在这里。</li>
<li>static文件夹: blogdown需要的一些静态资源文件，像css文件，图片，视频等文件。</li>
<li>themes文件夹: hugo主题，blogdown引入的hugo主题会下载到这个文件夹。</li>
</ul>
<p><strong>第三步：输入命令：blogdown::serve_site()可以启动你的博客网站，并在Viewer中显示运行的博客</strong></p>
<p><strong>第四步：Post你的Rmd博文</strong></p>
<ol style="list-style-type: decimal">
<li>content文件夹中的内容就是你要Post的内容，需先删除掉content-&gt;post文件夹下的文件，同时你也可以更改about.md文件的内容。</li>
<li>清空文件夹后你就可以按照下面的步骤Post自己的博文：tools-&gt;Addins-&gt;blogdown New Post-&gt;Excute</li>
<li>新建一个Post的Rmd文档,填写好标题、作者等内容后，点击Done，即可在Post的文件夹下看到生成的Rmd文档，你就可以编辑博文内容。</li>
<li>保存后生成你的博客：files-&gt;save</li>
</ol>
</div>
<div class="section level2">
<h2>三、部署网站</h2>
<p><strong>第一步：将博客托管到GitHub</strong></p>
<ol style="list-style-type: decimal">
<li>登录 GitHub，点击 GitHub 中的 New repository 创建新仓库。</li>
<li>在新仓库界面的clone or download下复制代码仓库地址。</li>
<li>打开Rstudio，选择File-&gt;Version Control，在对话框中的Repository URL下粘贴刚复制的代码地址，点击Create Project。</li>
<li>在Rstudio上的Github图标下拉选择push，将弹出对话框显示push过程，成功后打开github中对应的仓库，可以看到你本地博客网页的所有代码文件都已经上传到github上。</li>
</ol>
<p><strong>第二步：将博客托管到Netlify</strong></p>
<ol style="list-style-type: decimal">
<li>注册登录Netlify(<a href="https://app.netlify.com/signup" class="uri">https://app.netlify.com/signup</a>),可以直接通过GitHub账号登录。</li>
<li>点击 New site from git，点击GitHub，搜索GitHub中仓库的名称，填写部署的相关信息并点击部署。</li>
<li>在部署完成的界面中点击黄色字体site deploy in progress，将你的博客文件夹下的public文件夹拖到下方的空白区域中，上传成功后上面就显示生成了你的博客网址。</li>
</ol>
</div>
]]></content>
		</item>
		
	</channel>
</rss>
